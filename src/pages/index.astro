---
import { info } from "@data";

import Layout from "@layouts/Layout.astro";
import MetaHead from "@components/MetaHead.astro";
import Hero from "@components/Hero.astro";
import Section from "@components/Section.astro";

import SkillList from "@components/SkillList.astro";
import ExperienceList from "@components/ExperienceList.astro";
import ProjectList from "@components/ProjectList.astro";
import EducationList from "@components/EducationList.astro";
---

<!doctype html>
<html lang="en">
    <head>
        <MetaHead title={"Portfolio"} description={info.about} />
    </head>

    <body>
        <Layout>
            <Hero
                name={info.name}
                jobDescription={info.jobDescription}
                about={info.about}
            />

            <Section title="Skills">
                <div class="flex flex-row justify-between flex-wrap gap-8">
                    <SkillList
                        types={["Language"]}
                        listTitle="Languages"
                        skills={info.skills}
                    />
                    <SkillList
                        types={["Framework"]}
                        listTitle="Frameworks"
                        skills={info.skills}
                    />
                    <SkillList
                        types={["Tool"]}
                        listTitle="Tools & Design"
                        skills={info.skills}
                    />
                </div>
            </Section>

            <Section title="Experiences">
                <ExperienceList experiences={info.experiences} />
            </Section>

            <Section title="Projects">
                <ProjectList projects={info.projects} />
            </Section>

            <Section title="Education">
                <EducationList educations={info.educations} />
            </Section>
        </Layout>

        <script is:inline defer>
            const sections = document.querySelectorAll("section");
            const navLinks = document.querySelectorAll("nav ul li");
            const heroChevronButton = document.getElementsByClassName("toggle-opacity-button")[0];

            const highlightDesktopNavSection = () => {
                let current = "";
                sections.forEach((section) => {
                    const sectionTop = section.offsetTop;
                    if (
                        window.scrollY >=
                        sectionTop - window.screen.height / 3.25
                    )
                        current = section.getAttribute("id");
                });

                navLinks.forEach((li) => {
                    li.classList.remove("opacity-60");
                    if (li.classList.contains(current))
                        li.classList.add("opacity-100");
                    else li.classList.add("opacity-60");
                });
            };

            const toggleOpacityOfHeroChevronButton = () => {
                (window.scrollY >= 100) ? heroChevronButton.classList.add("opacity-0") : heroChevronButton.classList.remove("opacity-0");
            };

            window.addEventListener("scroll", () => {
                highlightDesktopNavSection();
                toggleOpacityOfHeroChevronButton();
            });

            const classesToObserver = {
                "slide-in-from-left": "animate-slide-in-from-left",
                "slide-in-from-right": "animate-slide-in-from-right",
                "slide-in-from-bottom": "animate-slide-in-from-bottom",
                "slide-in-from-bottom-delay-300": "animate-slide-in-from-bottom-delay-300",
                "slide-in-from-bottom-delay-400": "animate-slide-in-from-bottom-delay-400",
                "shrink-in-delay-500": "animate-shrink-in-delay-500",
                "shrink-in-delay-700": "animate-shrink-in-delay-700"
            };

            let observerOptions = {
                rootMargin: "-100px"
            };

            const observer = new IntersectionObserver((entries) => {
                entries.forEach((entry) => {
                    if (entry.isIntersecting) {
                        Object.keys(classesToObserver).forEach((classText) => {
                            const animateClass = classesToObserver[classText];
                            if(classText == "slide-in-from-left") console.log("Detected title:", classText, entry.target.classList, entry.target.classList.contains(classText));
                            if (entry.target.classList.contains(classText)) {
                                entry.target.classList.add(animateClass);
                            }
                        });
                    }
                });
            }, observerOptions);

            Object.keys(classesToObserver).forEach((classText) => {
                document
                    .querySelectorAll(`.${classText}`)
                    .forEach((el) => observer.observe(el));
            });
        </script>
    </body>
</html>
